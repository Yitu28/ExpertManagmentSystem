// <auto-generated />
using System;
using ExpertManagmentSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpertManagmentSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ExpertUserMngt")
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExpertManagmentSystem.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentCategory")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Full_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("UserParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", "ExpertUserMngt");
                });


            modelBuilder.Entity("ExpertManagmentSystem.Models.CivilCaseModels.CCFreeLegServiceFollowup", b =>
                {
                    b.Property<Guid>("FreeLegServiceFollowupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppointmentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CCFreelServicesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DecisionStatus")
                        .HasColumnType("int");

                    b.Property<string>("Decisionmadeby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DoD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Doa")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Doc")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("FreeLegServiceFollowupId");

                    b.HasIndex("CCFreelServicesId");

                    b.ToTable("CCFreeLegServiceFollowup", "ExpertUserMngt");
                });

            modelBuilder.Entity("ExpertManagmentSystem.Models.CivilCaseModels.CCFreelServices", b =>
                {
                    b.Property<Guid>("CCFreelServicesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");



                    modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_Closed_SentInReverse", b =>
                        {
                            b.Property<Guid>("CO_Closed_SentInReverseId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b.Property<string>("Defenedant")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("DefenedantZone")
                                .HasColumnType("nvarchar(max)");

                            b.Property<int>("OpinionGiven")
                                .HasColumnType("int");

                            b.Property<string>("ProsecutorNo")
                                .HasColumnType("nvarchar(max)");

                            b.Property<DateTime>("RegisterDate")
                                .HasColumnType("datetime2");

                            b.Property<Guid>("SectrorsDepartmentId")
                                .HasColumnType("uniqueidentifier");

                            b.HasKey("CO_Closed_SentInReverseId");

                            b.HasIndex("SectrorsDepartmentId");

                            b.ToTable("CO_Closed_SentInReverse", "ExpertUserMngt");
                        });

                    modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_CorruptionCharge", b =>
                        {
                            b.Property<Guid>("CO_CorruptionChargeId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b.Property<int>("Amount")
                                .HasColumnType("int");

                            b.Property<int>("CrimeType")
                                .HasColumnType("int");

                            b.Property<string>("DecisionType")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("DefendantJob")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("DefendentName")
                                .HasColumnType("nvarchar(max)");

                            b.Property<int>("Gender")
                                .HasColumnType("int");

                            b.Property<string>("InvestigationApproved")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("InvestigationNo")
                                .HasColumnType("nvarchar(max)");

                            b.Property<DateTime>("OpeningDate")
                                .HasColumnType("datetime2");

                            b.Property<string>("Remark")
                                .HasColumnType("nvarchar(max)");

                            b.Property<Guid>("SectrorsDepartmentId")
                                .HasColumnType("uniqueidentifier");

                            b.Property<string>("prosecutorNo")
                                .HasColumnType("nvarchar(max)");

                            b.HasKey("CO_CorruptionChargeId");

                            b.HasIndex("SectrorsDepartmentId");

                            b.ToTable("CO_CorruptionCharge", "ExpertUserMngt");
                        });

                    modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_FederalAppealOrBreak", b =>
                        {
                            b.Property<Guid>("CO_FederalAppealId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b.Property<int>("Amount")
                                .HasColumnType("int");

                            b.Property<string>("Answerer")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("Appellant")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("Appointment")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("CourtNo")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("CrimeType")
                                .HasColumnType("nvarchar(max)");

                            b.Property<int>("F_AppealOrBreak")
                                .HasColumnType("int");

                            b.Property<int>("Gender")
                                .HasColumnType("int");

                            b.Property<DateTime>("OpeningDate")
                                .HasColumnType("datetime2");

                            b.Property<string>("ProsecutorNo")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("Remark")
                                .HasColumnType("nvarchar(max)");

                            b.Property<Guid>("SectrorsDepartmentId")
                                .HasColumnType("uniqueidentifier");

                            b.Property<string>("SupremCourtNo")
                                .HasColumnType("nvarchar(max)");

                            b.HasKey("CO_FederalAppealId");

                            b.HasIndex("SectrorsDepartmentId");

                            b.ToTable("CO_FederalAppealOrBreak", "ExpertUserMngt");
                        });

                    modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_FirstOrder", b =>
                        {
                            b.Property<Guid>("CO_FirstOrderId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b.Property<string>("Amount")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("Comment")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("DefendantName")
                                .HasColumnType("nvarchar(max)");

                            b.Property<int>("Gender")
                                .HasColumnType("int");

                            b.Property<DateTime>("OpeningDate")
                                .HasColumnType("datetime2");

                            b.Property<string>("ProsecotorRecordNo")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("Remark")
                                .HasColumnType("nvarchar(max)");

                            b.Property<Guid>("SectrorsDepartmentId")
                                .HasColumnType("uniqueidentifier");

                            b.Property<string>("Zone")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("ZoneProsecotorRecordNo")
                                .HasColumnType("nvarchar(max)");

                            b.HasKey("CO_FirstOrderId");

                            b.HasIndex("SectrorsDepartmentId");

                            b.ToTable("CO_FirstOrder", "ExpertUserMngt");
                        });

                    modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_Petition", b =>
                        {
                            b.Property<Guid>("CO_PetitionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b.Property<int>("Amount")
                                .HasColumnType("int");

                            b.Property<string>("ComplainantsName")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("ExpertName")
                                .HasColumnType("nvarchar(max)");

                            b.Property<int>("Gender")
                                .HasColumnType("int");

                            b.Property<DateTime>("LetterDate")
                                .HasColumnType("datetime2");

                            b.Property<string>("LetterNo")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("OrderContent")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("OrderedClass")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("Remark")
                                .HasColumnType("nvarchar(max)");

                            b.Property<Guid>("SectrorsDepartmentId")
                                .HasColumnType("uniqueidentifier");

                            b.HasKey("CO_PetitionId");

                            b.HasIndex("SectrorsDepartmentId");

                            b.ToTable("CO_Petition", "ExpertUserMngt");
                        });

                    modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_RegionalBreakAppeal", b =>
                        {
                            b.Property<Guid>("CO_RegionalBreakAppealId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b.Property<string>("Address")
                                .HasColumnType("nvarchar(max)");

                            b.Property<int>("Amount")
                                .HasColumnType("int");

                            b.Property<string>("Answerer")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("Appellant")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("CO_CrimeType")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("CourtNo")
                                .HasColumnType("nvarchar(max)");

                            b.Property<int>("Gender")
                                .HasColumnType("int");

                            b.Property<DateTime>("OpeningDate")
                                .HasColumnType("datetime2");

                            b.Property<int>("R_BreakingOrAppeal")
                                .HasColumnType("int");

                            b.Property<string>("Reasons")
                                .HasColumnType("nvarchar(max)");

                            b.Property<string>("Remark")
                                .HasColumnType("nvarchar(max)");

                            modelBuilder.Entity("ExpertManagmentSystem.Models.CivilCaseModels.DirectChargeFollowUp", b =>
                                {
                                    b.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("ApplicationUserId")
                                        .HasColumnType("nvarchar(450)");

                                    b.Property<string>("ApplicationUserUser")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<int>("CivilCaseCategory")
                                        .HasColumnType("int");

                                    b.Property<DateTime?>("CreatedAt")
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime>("DateApointmented")
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime>("DateSubmittedToCourt")
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime>("DecissionDate")
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime?>("DeletedAt")
                                        .HasColumnType("datetime2");

                                    b.Property<Guid>("DirectChargeOppeningId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<DateTime?>("EdittedAt")
                                        .HasColumnType("datetime2");

                                    b.Property<string>("IssuedCourtWrittenForOrganization")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.HasKey("Id");

                                    b.HasIndex("ApplicationUserId");

                                    b.HasIndex("DirectChargeOppeningId");

                                    b.ToTable("DirectChargeFollowUps", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("ExpertManagmentSystem.Models.CivilCaseModels.DirectChargeOpenning", b =>
                                {
                                    b.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("Accused")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("AddressWoreda")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("AddressZone")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");


                                    b.Property<string>("Applicant")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<DateTime?>("DoAss")
                                        .IsRequired()
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime?>("DoRet")
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime?>("Doo")
                                        .IsRequired()
                                        .HasColumnType("datetime2");

                                    b.Property<string>("ExpertName")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b.Property<string>("FileNo")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<int?>("FreelCategory")
                                        .HasColumnType("int");

                                    b.Property<int>("Gender")
                                        .HasColumnType("int");

                                    b.Property<string>("LOS")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("PDecission")
                                        .HasMaxLength(250)
                                        .HasColumnType("nvarchar(250)");

                                    b.Property<string>("RecorNo")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("Responder")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<Guid>("SectrorsDepartmentId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<int>("SupportType")
                                        .HasColumnType("int");

                                    b.Property<int>("age")
                                        .HasColumnType("int");

                                    b.Property<string>("apsm")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("typesofIssue")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.HasKey("CCFreelServicesId");

                                    b.HasIndex("SectrorsDepartmentId");

                                    b.ToTable("CCFreelServices", "ExpertUserMngt");

                                    b.Property<decimal>("AmountPerBirr")
                                        .HasColumnType("decimal(18,2)");

                                    b.Property<decimal>("AmountPerSquerMetter")
                                        .HasColumnType("decimal(18,2)");

                                    b.Property<string>("ApplicationUserId")
                                        .HasColumnType("nvarchar(450)");

                                    b.Property<string>("ApplicationUserUser")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<int>("CivilCaseCategory")
                                        .HasColumnType("int");

                                    b.Property<DateTime>("CompletionDate")
                                        .HasColumnType("datetime2");

                                    b.Property<string>("CourtRecordNumber")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<DateTime?>("CreatedAt")
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime>("DateDirected")
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime?>("DeletedAt")
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime?>("EdittedAt")
                                        .HasColumnType("datetime2");

                                    b.Property<string>("NameOfTheExpert")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<DateTime>("OpenningDate")
                                        .HasColumnType("datetime2");

                                    b.Property<string>("Plaintiff")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("ProsecutorDecission")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("ProsecutorsSRecordNumber")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("TimeTakenToComplete")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("TypeOfCustomer")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("TypeOfIssue")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.HasKey("Id");

                                    b.HasIndex("ApplicationUserId");

                                    b.ToTable("DirectChargeOpennings", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("ExpertManagmentSystem.Models.CrimeModels.Cr_Crime_Type", b =>
                                {
                                    b.Property<Guid>("Cr_Crime_TypeId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("CrimeTypeName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.HasKey("Cr_Crime_TypeId");

                                    b.ToTable("Cr_Crime_Types", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("ExpertManagmentSystem.Models.CrimeModels.Cr_Decided_Judicial_and_Prosecuter", b =>
                                {
                                    b.Property<Guid>("Cr_Decided_Judicial_and_ProsecuterId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<int>("AmountOfAppealFemale")
                                        .HasColumnType("int");

                                    b.Property<int>("AmountOfAppealMale")
                                        .HasColumnType("int");

                                    b.Property<string>("Applicant")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("CourtDesitions")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<int>("Court_No")
                                        .HasColumnType("int");

                                    b.Property<Guid>("Cr_Crime_TypeId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("CrimeType")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("EventStatus")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("ExpertsToCourt")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("ExpertsToProsecuter")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<DateTime>("OpeningDate")
                                        .HasColumnType("datetime2");

                                    b.Property<string>("Other")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<int?>("ProsecutorComment")
                                        .HasColumnType("int");

                                    b.Property<string>("ProsocuterFocus")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<int>("ProsocuterNo")
                                        .HasColumnType("int");

                                    b.Property<string>("Respondant")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<Guid>("SectrorsDepartmentId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("ToFederal")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.HasKey("Cr_Decided_Judicial_and_ProsecuterId");

                                    b.HasIndex("Cr_Crime_TypeId");

                                    b.HasIndex("SectrorsDepartmentId");

                                    b.ToTable("Cr_Decided_Judicial_and_Prosecuters", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("ExpertManagmentSystem.Models.CrimeModels.Cr_JudicalAppealDirectCharege", b =>
                                {
                                    b.Property<Guid>("Cr_JudicalAppealDirectCharegeId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("Applicant")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<int>("Court_No")
                                        .HasColumnType("int");

                                    b.Property<Guid>("Cr_Crime_TypeId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("CrimeType")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<DateTime>("DateOfAppointment")
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime>("Date_of_Administration")
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime>("Date_of_Returen")
                                        .HasColumnType("datetime2");

                                    b.Property<DateTime>("Openinig_data")
                                        .HasColumnType("datetime2");

                                    b.Property<string>("Prosocuter_Comments")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<int>("Prosocuters_No")
                                        .HasColumnType("int");

                                    b.Property<string>("Respondent")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<DateTime>("Returen")
                                        .HasColumnType("datetime2");


                                    b.Property<Guid>("SectrorsDepartmentId")
                                        .HasColumnType("uniqueidentifier");


                                    b.HasKey("CO_RegionalBreakAppealId");

                                    b.HasIndex("SectrorsDepartmentId");

                                    b.ToTable("CO_RegionalBreakAppeal", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_Warranty", b =>
                                {
                                    b.Property<int>("CO_WarrantyId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CO_WarrantyId"), 1L, 1);

                                    b.Property<int>("Amount")
                                        .HasColumnType("int");

                                    b.Property<string>("ApplicantName")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("CourtNo")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<int>("Gender")
                                        .HasColumnType("int");

                                    b.Property<string>("ProsecotorNo")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("Remark")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<Guid>("SectrorsDepartmentId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<DateTime>("WarrantyDate")
                                        .HasColumnType("datetime2");

                                    b.HasKey("CO_WarrantyId");

                                    b.HasIndex("SectrorsDepartmentId");

                                    b.ToTable("CO_Warranty", "ExpertUserMngt");

                                    b.Property<DateTime>("Time")
                                        .HasColumnType("datetime2");

                                    b.Property<string>("Worked_Profesional")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("Zone")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.HasKey("Cr_JudicalAppealDirectCharegeId");

                                    b.HasIndex("Cr_Crime_TypeId");

                                    b.HasIndex("SectrorsDepartmentId");

                                    b.ToTable("Cr_JudicalAppealDirectChareges", "ExpertUserMngt");


                                });

                            modelBuilder.Entity("ExpertManagmentSystem.OrganizationalStructures.ReginalSector", b =>
                                {
                                    b.Property<Guid>("ReginalSectorId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("ReginalSectorName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.HasKey("ReginalSectorId");

                                    b.ToTable("ReginaslSector", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("ExpertManagmentSystem.OrganizationalStructures.SectrorsDepartment", b =>
                                {
                                    b.Property<Guid>("SectrorsDepartmentId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<int>("DepartmentCategory")
                                        .HasColumnType("int");

                                    b.Property<string>("DepartmentName")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<Guid>("DepartmentParentId")
                                        .HasColumnType("uniqueidentifier");

                                    b.HasKey("SectrorsDepartmentId");

                                    b.ToTable("SectrorsDepartment", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("ExpertManagmentSystem.OrganizationalStructures.WoredaSectors", b =>
                                {
                                    b.Property<Guid>("WoredaSectorsId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("WoredaSectorsName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<Guid>("ZonalSectorsId")
                                        .HasColumnType("uniqueidentifier");

                                    b.HasKey("WoredaSectorsId");

                                    b.HasIndex("ZonalSectorsId");

                                    b.ToTable("WoredaSectors", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("ExpertManagmentSystem.OrganizationalStructures.ZonalSectors", b =>
                                {
                                    b.Property<Guid>("ZonalSectorId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<Guid>("ReginalSectorId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("ZonalSectorName")
                                        .HasColumnType("nvarchar(max)");

                                    b.HasKey("ZonalSectorId");

                                    b.HasIndex("ReginalSectorId");

                                    b.ToTable("ZonalSectors", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("ExpertManagmentSystem.ViewModels.SectorDepartmentViewModels", b =>
                                {
                                    b.Property<int>("DepartmentCategory")
                                        .HasColumnType("int");

                                    b.Property<string>("DepartmentName")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<Guid>("DepartmentParentId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<Guid>("ReginalSectorId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("ReginalSectorName")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<Guid>("SectrorsDepartmentId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<Guid>("WoredaSectorsId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("WoredaSectorsName")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<Guid>("ZonalSectorId")
                                        .HasColumnType("uniqueidentifier");

                                    b.Property<string>("ZonalSectorName")
                                        .HasColumnType("nvarchar(max)");

                                    b.ToTable("SectorDepartmentViewModels", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                                {
                                    b.Property<string>("Id")
                                        .HasColumnType("nvarchar(450)");

                                    b.Property<string>("ConcurrencyStamp")
                                        .IsConcurrencyToken()
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("Name")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b.Property<string>("NormalizedName")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b.HasKey("Id");

                                    b.HasIndex("NormalizedName")
                                        .IsUnique()
                                        .HasDatabaseName("RoleNameIndex")
                                        .HasFilter("[NormalizedName] IS NOT NULL");

                                    b.ToTable("Roles", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                                {
                                    b.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                                    b.Property<string>("ClaimType")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("ClaimValue")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("RoleId")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(450)");

                                    b.HasKey("Id");

                                    b.HasIndex("RoleId");

                                    b.ToTable("RoleClaims", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                                {
                                    b.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                                    b.Property<string>("ClaimType")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("ClaimValue")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("UserId")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(450)");

                                    b.HasKey("Id");

                                    b.HasIndex("UserId");

                                    b.ToTable("UserClaims", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                                {
                                    b.Property<string>("LoginProvider")
                                        .HasColumnType("nvarchar(450)");

                                    b.Property<string>("ProviderKey")
                                        .HasColumnType("nvarchar(450)");

                                    b.Property<string>("ProviderDisplayName")
                                        .HasColumnType("nvarchar(max)");

                                    b.Property<string>("UserId")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(450)");

                                    b.HasKey("LoginProvider", "ProviderKey");

                                    b.HasIndex("UserId");

                                    b.ToTable("UserLogins", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                                {
                                    b.Property<string>("UserId")
                                        .HasColumnType("nvarchar(450)");

                                    b.Property<string>("RoleId")
                                        .HasColumnType("nvarchar(450)");

                                    b.HasKey("UserId", "RoleId");

                                    b.HasIndex("RoleId");

                                    b.ToTable("UserRoles", "ExpertUserMngt");
                                });

                            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                                {
                                    b.Property<string>("UserId")
                                        .HasColumnType("nvarchar(450)");

                                    b.Property<string>("LoginProvider")
                                        .HasColumnType("nvarchar(450)");

                                    b.Property<string>("Name")
                                        .HasColumnType("nvarchar(450)");

                                    b.Property<string>("Value")
                                        .HasColumnType("nvarchar(max)");

                                    b.HasKey("UserId", "LoginProvider", "Name");

                                    b.ToTable("UserTokens", "ExpertUserMngt");
                                });


                            modelBuilder.Entity("ExpertManagmentSystem.Models.CivilCaseModels.CCFreeLegServiceFollowup", b =>
                                {
                                    b.HasOne("ExpertManagmentSystem.Models.CivilCaseModels.CCFreelServices", "CCFreelServices")
                                        .WithMany("FreeLegServiceFollowup")
                                        .HasForeignKey("CCFreelServicesId")
                                        .OnDelete(DeleteBehavior.Cascade)
                                        .IsRequired();

                                    b.Navigation("CCFreelServices");
                                });

                            modelBuilder.Entity("ExpertManagmentSystem.Models.CivilCaseModels.CCFreelServices", b =>
                                {
                                    b.HasOne("ExpertManagmentSystem.OrganizationalStructures.SectrorsDepartment", "SectrorsDepartment")
                                        .WithMany("CCFreelServices");


                                    modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_Closed_SentInReverse", b =>
                                {
                                    b.HasOne("ExpertManagmentSystem.OrganizationalStructures.SectrorsDepartment", "SectrorsDepartment")
                                        .WithMany()
                                        .HasForeignKey("SectrorsDepartmentId")
                                        .OnDelete(DeleteBehavior.Cascade)
                                        .IsRequired();

                                    b.Navigation("SectrorsDepartment");
                                });

                                    modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_CorruptionCharge", b =>
                                {
                                    b.HasOne("ExpertManagmentSystem.OrganizationalStructures.SectrorsDepartment", "SectrorsDepartment")
                                        .WithMany()

                                        .HasForeignKey("SectrorsDepartmentId")
                                        .OnDelete(DeleteBehavior.Cascade)
                                        .IsRequired();

                                    b.Navigation("SectrorsDepartment");
                                });



                                    modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_FederalAppealOrBreak", b =>
                                {
                                    b.HasOne("ExpertManagmentSystem.OrganizationalStructures.SectrorsDepartment", "SectrorsDepartment")
                                        .WithMany()
                                        .HasForeignKey("SectrorsDepartmentId")
                                        .OnDelete(DeleteBehavior.Cascade)
                                        .IsRequired();

                                    b.Navigation("SectrorsDepartment");
                                });

                                    modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_FirstOrder", b =>
                                {
                                    b.HasOne("ExpertManagmentSystem.OrganizationalStructures.SectrorsDepartment", "SectrorsDepartment")
                                        .WithMany()
                                        .HasForeignKey("SectrorsDepartmentId")
                                        .OnDelete(DeleteBehavior.Cascade)
                                        .IsRequired();

                                    b.Navigation("SectrorsDepartment");
                                });

                                    modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_Petition", b =>
                                        {

                                            modelBuilder.Entity("ExpertManagmentSystem.Models.CivilCaseModels.DirectChargeFollowUp", b =>
                                        {
                                            b.HasOne("ExpertManagmentSystem.Data.ApplicationUser", "ApplicationUser")
                                                .WithMany()
                                                .HasForeignKey("ApplicationUserId");

                                            b.HasOne("ExpertManagmentSystem.Models.CivilCaseModels.DirectChargeOpenning", "DirectChargeOpenning")
                                                .WithMany("DirectChargeFollowUps")
                                                .HasForeignKey("DirectChargeOppeningId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();

                                            b.Navigation("ApplicationUser");

                                            b.Navigation("DirectChargeOpenning");
                                        });

                                            modelBuilder.Entity("ExpertManagmentSystem.Models.CivilCaseModels.DirectChargeOpenning", b =>
                                        {
                                            b.HasOne("ExpertManagmentSystem.Data.ApplicationUser", "ApplicationUser")
                                                .WithMany()
                                                .HasForeignKey("ApplicationUserId");

                                            b.Navigation("ApplicationUser");
                                        });

                                            modelBuilder.Entity("ExpertManagmentSystem.Models.CrimeModels.Cr_Decided_Judicial_and_Prosecuter", b =>
                                        {
                                            b.HasOne("ExpertManagmentSystem.Models.CrimeModels.Cr_Crime_Type", "Cr_Crime_Type")
                                                .WithMany("Cr_Decided_Judicial_and_Prosecuters")
                                                .HasForeignKey("Cr_Crime_TypeId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();


                                            b.HasOne("ExpertManagmentSystem.OrganizationalStructures.SectrorsDepartment", "SectrorsDepartment")
                                                .WithMany()
                                                .HasForeignKey("SectrorsDepartmentId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();


                                            b.Navigation("SectrorsDepartment");
                                        });

                                            modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_RegionalBreakAppeal", b =>
                                        {
                                            b.HasOne("ExpertManagmentSystem.OrganizationalStructures.SectrorsDepartment", "SectrorsDepartment")
                                                .WithMany()
                                                .HasForeignKey("SectrorsDepartmentId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();

                                            b.Navigation("SectrorsDepartment");
                                        });

                                            modelBuilder.Entity("ExpertManagmentSystem.Models.Corruption.CO_Warranty", b =>
                                        {

                                            b.Navigation("Cr_Crime_Type");

                                            b.Navigation("SectrorsDepartment");
                                        });

                                            modelBuilder.Entity("ExpertManagmentSystem.Models.CrimeModels.Cr_JudicalAppealDirectCharege", b =>
                                        {
                                            b.HasOne("ExpertManagmentSystem.Models.CrimeModels.Cr_Crime_Type", "Cr_Crime_Type")
                                                .WithMany("Cr_JudicalAppealDirectChareges")
                                                .HasForeignKey("Cr_Crime_TypeId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();


                                            b.HasOne("ExpertManagmentSystem.OrganizationalStructures.SectrorsDepartment", "SectrorsDepartment")
                                                .WithMany()
                                                .HasForeignKey("SectrorsDepartmentId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();


                                            b.Navigation("Cr_Crime_Type");


                                            b.Navigation("SectrorsDepartment");
                                        });

                                            modelBuilder.Entity("ExpertManagmentSystem.OrganizationalStructures.WoredaSectors", b =>
                                        {
                                            b.HasOne("ExpertManagmentSystem.OrganizationalStructures.ZonalSectors", "ZonalSectors")
                                                .WithMany()
                                                .HasForeignKey("ZonalSectorsId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();

                                            b.Navigation("ZonalSectors");
                                        });

                                            modelBuilder.Entity("ExpertManagmentSystem.OrganizationalStructures.ZonalSectors", b =>
                                        {
                                            b.HasOne("ExpertManagmentSystem.OrganizationalStructures.ReginalSector", "ReginalSector")
                                                .WithMany("ZonalSectors")
                                                .HasForeignKey("ReginalSectorId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();

                                            b.Navigation("ReginalSector");
                                        });

                                            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                                        {
                                            b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                                                .WithMany()
                                                .HasForeignKey("RoleId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();
                                        });

                                            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                                        {
                                            b.HasOne("ExpertManagmentSystem.Data.ApplicationUser", null)
                                                .WithMany()
                                                .HasForeignKey("UserId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();
                                        });

                                            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                                        {
                                            b.HasOne("ExpertManagmentSystem.Data.ApplicationUser", null)
                                                .WithMany()
                                                .HasForeignKey("UserId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();
                                        });

                                            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                                        {
                                            b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                                                .WithMany()
                                                .HasForeignKey("RoleId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();

                                            b.HasOne("ExpertManagmentSystem.Data.ApplicationUser", null)
                                                .WithMany()
                                                .HasForeignKey("UserId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();
                                        });

                                            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                                        {
                                            b.HasOne("ExpertManagmentSystem.Data.ApplicationUser", null)
                                                .WithMany()
                                                .HasForeignKey("UserId")
                                                .OnDelete(DeleteBehavior.Cascade)
                                                .IsRequired();
                                        });


                                            modelBuilder.Entity("ExpertManagmentSystem.Models.CivilCaseModels.CCFreelServices", b =>
                                                {
                                                    b.Navigation("FreeLegServiceFollowup");

                                                    modelBuilder.Entity("ExpertManagmentSystem.Models.CivilCaseModels.DirectChargeOpenning", b =>
                                                {
                                                    b.Navigation("DirectChargeFollowUps");
                                                });

                                                    modelBuilder.Entity("ExpertManagmentSystem.Models.CrimeModels.Cr_Crime_Type", b =>
                                                {
                                                    b.Navigation("Cr_Decided_Judicial_and_Prosecuters");

                                                    b.Navigation("Cr_JudicalAppealDirectChareges");

                                                });

                                                    modelBuilder.Entity("ExpertManagmentSystem.OrganizationalStructures.ReginalSector", b =>
                                                {
                                                    b.Navigation("ZonalSectors");
                                                });

                                                    modelBuilder.Entity("ExpertManagmentSystem.OrganizationalStructures.SectrorsDepartment", b =>
                                                {
                                                    b.Navigation("CCFreelServices");
                                                });
#pragma warning restore 612, 618
                                                });
                                        });
                                });
                        });
                });

        } } }
